#ifndef _TEST_H
#define _TEST_H

#define LENGTH(N) (sizeof(N)/sizeof(N[0]))


const char *alphabet[] =
	{ "0", "1" , "2", "3", "4", "5", "6", "7", "8", "9",
	  "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m",
	  "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z",
	  "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M",
	  "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z" };

const char *mods[] =
	{ "BackSpace",
	  "Tab",
	  "Linefeed",
	  "Clear",
	  "Return",
	  "Pause",
	  "Scroll_Lock",
	  "Sys_Req",
	  "Escape",
	  "Delete",
	  "Home",
	  "Left",
	  "Up",
	  "Right",
	  "Down",
	  "Prior",
	  "Page_Up",
	  "Next",
	  "Page_Down",
	  "End",
	  "Begin",
	  "Select",
	  "Print",
	  "Execute",
	  "Insert",
	  "Undo",
	  "Redo",
	  "Menu",
	  "Find",
	  "Cancel",
	  "Help",
	  "Break",
	  "Mode_switch",
	  "script_switch",
	  "Num_Lock",
	  "KP_Space",
	  "KP_Tab",
	  "KP_Enter",
	  "KP_F1",
	  "KP_F2",
	  "KP_F3",
	  "KP_F4",
	  "KP_Home",
	  "KP_Left",
	  "KP_Up",
	  "KP_Right",
	  "KP_Down",
	  "KP_Prior",
	  "KP_Page_Up",
	  "KP_Next",
	  "KP_Page_Down",
	  "KP_End",
	  "KP_Begin",
	  "KP_Insert",
	  "KP_Delete",
	  "KP_Equal",
	  "KP_Multiply",
	  "KP_Add",
	  "KP_Separator",
	  "KP_Subtract",
	  "KP_Decimal",
	  "KP_Divide",
	  "F1",
	  "F2",
	  "F3",
	  "F4",
	  "F5",
	  "F6",
	  "F7",
	  "F8",
	  "F9",
	  "F10",
	  "F11",
	  "L1",
	  "F12",
	  "L2",
	  "F13",
	  "L3",
	  "F14",
	  "L4",
	  "F15",
	  "L5",
	  "F16",
	  "L6",
	  "F17",
	  "L7",
	  "F18",
	  "L8",
	  "F19",
	  "L9",
	  "F20",
	  "L10",
	  "F21",
	  "R1",
	  "F22",
	  "R2",
	  "F23",
	  "R3",
	  "F24",
	  "R4",
	  "F25",
	  "R5",
	  "F26",
	  "R6",
	  "F27",
	  "R7",
	  "F28",
	  "R8",
	  "F29",
	  "R9",
	  "F30",
	  "R10",
	  "F31",
	  "R11",
	  "F32",
	  "R12",
	  "F33",
	  "R13",
	  "F34",
	  "R14",
	  "F35",
	  "R15",
	  "Shift_L",
	  "Shift_R",
	  "Control_L",
	  "Control_R",
	  "Caps_Lock",
	  "Shift_Lock",
	  "Meta_L",
	  "Meta_R",
	  "Alt_L",
	  "Alt_R",
	  "Super_L",
	  "Super_R",
	  "Hyper_L",
	  "Hyper_R" };


extern Display *dpy;

extern void test_key(const char *key,		/* something from alphabet or mods */
		      int type,			/* 1 - ButtonPress, 0 - ButtonRelease */
		      unsigned long delay);	/* in miliseconds */


#endif /* _TEST_H */
